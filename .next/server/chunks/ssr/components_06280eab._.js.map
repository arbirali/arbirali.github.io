{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/rahat.ali/Documents/workplace/rahat/arbirali.github.io/components/textAnimations/highlight-text.tsx"],"sourcesContent":["import * as React from \"react\";\nimport {\n  motion,\n  useInView,\n  type HTMLMotionProps,\n  type Transition,\n  type UseInViewOptions,\n} from \"framer-motion\";\n\nimport { cn } from \"@/lib/utils\";\n\ntype HighlightTextProps = HTMLMotionProps<\"span\"> & {\n  text: string;\n  inView?: boolean;\n  inViewMargin?: UseInViewOptions[\"margin\"];\n  inViewOnce?: boolean;\n  transition?: Transition;\n};\n\nconst HighlightText = React.forwardRef<HTMLSpanElement, HighlightTextProps>(\n  (\n    {\n      text,\n      className,\n      inView = false,\n      inViewMargin = \"0px\",\n      inViewOnce = true,\n      transition = { duration: 2, ease: \"easeInOut\" },\n      ...props\n    },\n    ref,\n  ) => {\n    const localRef = React.useRef<HTMLSpanElement>(null);\n\n    React.useImperativeHandle(ref, () => localRef.current as HTMLSpanElement);\n\n    const inViewResult = useInView(localRef, {\n      once: inViewOnce,\n      margin: inViewMargin,\n    });\n    const isInView = !inView || inViewResult;\n\n    return (\n      <motion.span\n        ref={localRef}\n        animate={isInView ? { backgroundSize: \"100% 100%\" } : undefined}\n        className={cn(\n          `relative inline-block px-2 py-1 rounded-lg bg-gradient-to-r from-blue-400 to-purple-400`,\n          className,\n        )}\n        data-slot=\"highlight-text\"\n        initial={{\n          backgroundSize: \"0% 100%\",\n        }}\n        style={{\n          backgroundRepeat: \"no-repeat\",\n          backgroundPosition: \"left center\",\n          display: \"inline\",\n        }}\n        transition={transition}\n        {...props}\n      >\n        {text}\n      </motion.span>\n    );\n  },\n);\n\nHighlightText.displayName = \"HighlightText\";\n\nexport { HighlightText, type HighlightTextProps };\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AAQA;;;;;AAUA,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EACnC,CACE,EACE,IAAI,EACJ,SAAS,EACT,SAAS,KAAK,EACd,eAAe,KAAK,EACpB,aAAa,IAAI,EACjB,aAAa;IAAE,UAAU;IAAG,MAAM;AAAY,CAAC,EAC/C,GAAG,OACJ,EACD;IAEA,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,SAAY,AAAD,EAAmB;IAE/C,CAAA,GAAA,qMAAA,CAAA,sBAAyB,AAAD,EAAE,KAAK,IAAM,SAAS,OAAO;IAErD,MAAM,eAAe,CAAA,GAAA,6KAAA,CAAA,YAAS,AAAD,EAAE,UAAU;QACvC,MAAM;QACN,QAAQ;IACV;IACA,MAAM,WAAW,CAAC,UAAU;IAE5B,qBACE,8OAAC,0LAAA,CAAA,SAAM,CAAC,IAAI;QACV,KAAK;QACL,SAAS,WAAW;YAAE,gBAAgB;QAAY,IAAI;QACtD,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,CAAC,uFAAuF,CAAC,EACzF;QAEF,aAAU;QACV,SAAS;YACP,gBAAgB;QAClB;QACA,OAAO;YACL,kBAAkB;YAClB,oBAAoB;YACpB,SAAS;QACX;QACA,YAAY;QACX,GAAG,KAAK;kBAER;;;;;;AAGP;AAGF,cAAc,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///Users/rahat.ali/Documents/workplace/rahat/arbirali.github.io/components/textAnimations/splitting-text.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport {\n  motion,\n  type Variants,\n  type TargetAndTransition,\n  type HTMLMotionProps,\n  useInView,\n  type UseInViewOptions,\n} from \"framer-motion\";\n\ntype DefaultSplittingTextProps = {\n  motionVariants?: {\n    initial?: Record<string, any>;\n    animate?: Record<string, any>;\n    transition?: Record<string, any>;\n    stagger?: number;\n  };\n  inView?: boolean;\n  inViewMargin?: UseInViewOptions[\"margin\"];\n  inViewOnce?: boolean;\n  delay?: number;\n} & HTMLMotionProps<\"div\">;\n\ntype CharsOrWordsSplittingTextProps = DefaultSplittingTextProps & {\n  type?: \"chars\" | \"words\";\n  text: string;\n};\n\ntype LinesSplittingTextProps = DefaultSplittingTextProps & {\n  type: \"lines\";\n  text: string[];\n};\n\ntype SplittingTextProps =\n  | CharsOrWordsSplittingTextProps\n  | LinesSplittingTextProps;\n\nconst defaultItemVariant: Variants = {\n  hidden: { x: 150, opacity: 0 },\n  visible: {\n    x: 0,\n    opacity: 1,\n    transition: { duration: 0.7, ease: \"easeOut\" },\n  },\n};\n\nexport const SplittingText = React.forwardRef<\n  HTMLDivElement,\n  SplittingTextProps\n>(\n  (\n    {\n      text,\n      type = \"chars\",\n      motionVariants = {},\n      inView = false,\n      inViewMargin = \"0px\",\n      inViewOnce = true,\n      delay = 0,\n      ...props\n    },\n    ref,\n  ) => {\n    const items = React.useMemo<React.ReactNode[]>(() => {\n      if (Array.isArray(text)) {\n        return text.flatMap((line, i) => [\n          <React.Fragment key={`line-${i}`}>{line}</React.Fragment>,\n          i < text.length - 1 ? <br key={`br-${i}`} /> : null,\n        ]);\n      }\n\n      if (type === \"words\") {\n        const tokens = text.match(/\\S+\\s*/g) || [];\n\n        return tokens.map((token, i) => (\n          <React.Fragment key={i}>{token}</React.Fragment>\n        ));\n      }\n\n      return text\n        .split(\"\")\n        .map((char, i) => <React.Fragment key={i}>{char}</React.Fragment>);\n    }, [text, type]);\n\n    const containerVariants: Variants = {\n      hidden: {},\n      visible: {\n        transition: {\n          delayChildren: delay / 1000,\n          staggerChildren:\n            motionVariants.stagger ??\n            (type === \"chars\" ? 0.05 : type === \"words\" ? 0.06 : 0.3),\n        },\n      },\n    };\n\n    const itemVariants: Variants = {\n      hidden: {\n        ...defaultItemVariant.hidden,\n        ...(motionVariants.initial || {}),\n      },\n      visible: {\n        ...defaultItemVariant.visible,\n        ...(motionVariants.animate || {}),\n        transition: {\n          ...((defaultItemVariant.visible as TargetAndTransition).transition ||\n            {}),\n          ...(motionVariants.transition || {}),\n        },\n      },\n    };\n\n    const localRef = React.useRef<HTMLDivElement>(null);\n\n    React.useImperativeHandle(ref, () => localRef.current as HTMLDivElement);\n\n    const inViewResult = useInView(localRef, {\n      once: inViewOnce,\n      margin: inViewMargin,\n    });\n    const isInView = !inView || inViewResult;\n\n    return (\n      <motion.span\n        ref={localRef}\n        animate={isInView ? \"visible\" : \"hidden\"}\n        initial=\"hidden\"\n        variants={containerVariants}\n        {...props}\n      >\n        {items.map(\n          (item, index) =>\n            item && (\n              <React.Fragment key={index}>\n                <motion.span\n                  key={index}\n                  style={{\n                    display: \"inline-block\",\n                    whiteSpace:\n                      type === \"chars\"\n                        ? \"pre\"\n                        : Array.isArray(text)\n                          ? \"normal\"\n                          : \"normal\",\n                  }}\n                  variants={itemVariants}\n                >\n                  {item}\n                </motion.span>\n                {type === \"words\" && \" \"}\n              </React.Fragment>\n            ),\n        )}\n      </motion.span>\n    );\n  },\n);\n\nSplittingText.displayName = \"SplittingText\";\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAHA;;;;AAuCA,MAAM,qBAA+B;IACnC,QAAQ;QAAE,GAAG;QAAK,SAAS;IAAE;IAC7B,SAAS;QACP,GAAG;QACH,SAAS;QACT,YAAY;YAAE,UAAU;YAAK,MAAM;QAAU;IAC/C;AACF;AAEO,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI1C,CACE,EACE,IAAI,EACJ,OAAO,OAAO,EACd,iBAAiB,CAAC,CAAC,EACnB,SAAS,KAAK,EACd,eAAe,KAAK,EACpB,aAAa,IAAI,EACjB,QAAQ,CAAC,EACT,GAAG,OACJ,EACD;IAEA,MAAM,QAAQ,CAAA,GAAA,qMAAA,CAAA,UAAa,AAAD,EAAqB;QAC7C,IAAI,MAAM,OAAO,CAAC,OAAO;YACvB,OAAO,KAAK,OAAO,CAAC,CAAC,MAAM,IAAM;kCAC/B,8OAAC,qMAAA,CAAA,WAAc;kCAAoB;uBAAd,CAAC,KAAK,EAAE,GAAG;;;;;oBAChC,IAAI,KAAK,MAAM,GAAG,kBAAI,8OAAC,UAAQ,CAAC,GAAG,EAAE,GAAG;;;;+BAAO;iBAChD;QACH;QAEA,IAAI,SAAS,SAAS;YACpB,MAAM,SAAS,KAAK,KAAK,CAAC,cAAc,EAAE;YAE1C,OAAO,OAAO,GAAG,CAAC,CAAC,OAAO,kBACxB,8OAAC,qMAAA,CAAA,WAAc;8BAAU;mBAAJ;;;;;QAEzB;QAEA,OAAO,KACJ,KAAK,CAAC,IACN,GAAG,CAAC,CAAC,MAAM,kBAAM,8OAAC,qMAAA,CAAA,WAAc;0BAAU;eAAJ;;;;;IAC3C,GAAG;QAAC;QAAM;KAAK;IAEf,MAAM,oBAA8B;QAClC,QAAQ,CAAC;QACT,SAAS;YACP,YAAY;gBACV,eAAe,QAAQ;gBACvB,iBACE,eAAe,OAAO,IACtB,CAAC,SAAS,UAAU,OAAO,SAAS,UAAU,OAAO,GAAG;YAC5D;QACF;IACF;IAEA,MAAM,eAAyB;QAC7B,QAAQ;YACN,GAAG,mBAAmB,MAAM;YAC5B,GAAI,eAAe,OAAO,IAAI,CAAC,CAAC;QAClC;QACA,SAAS;YACP,GAAG,mBAAmB,OAAO;YAC7B,GAAI,eAAe,OAAO,IAAI,CAAC,CAAC;YAChC,YAAY;gBACV,GAAI,AAAC,mBAAmB,OAAO,CAAyB,UAAU,IAChE,CAAC,CAAC;gBACJ,GAAI,eAAe,UAAU,IAAI,CAAC,CAAC;YACrC;QACF;IACF;IAEA,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,SAAY,AAAD,EAAkB;IAE9C,CAAA,GAAA,qMAAA,CAAA,sBAAyB,AAAD,EAAE,KAAK,IAAM,SAAS,OAAO;IAErD,MAAM,eAAe,CAAA,GAAA,6KAAA,CAAA,YAAS,AAAD,EAAE,UAAU;QACvC,MAAM;QACN,QAAQ;IACV;IACA,MAAM,WAAW,CAAC,UAAU;IAE5B,qBACE,8OAAC,0LAAA,CAAA,SAAM,CAAC,IAAI;QACV,KAAK;QACL,SAAS,WAAW,YAAY;QAChC,SAAQ;QACR,UAAU;QACT,GAAG,KAAK;kBAER,MAAM,GAAG,CACR,CAAC,MAAM,QACL,sBACE,8OAAC,qMAAA,CAAA,WAAc;;kCACb,8OAAC,0LAAA,CAAA,SAAM,CAAC,IAAI;wBAEV,OAAO;4BACL,SAAS;4BACT,YACE,SAAS,UACL,QACA,MAAM,OAAO,CAAC,QACZ,WACA;wBACV;wBACA,UAAU;kCAET;uBAZI;;;;;oBAcN,SAAS,WAAW;;eAhBF;;;;;;;;;;AAsBjC;AAGF,cAAc,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":["file:///Users/rahat.ali/Documents/workplace/rahat/arbirali.github.io/components/about/profile-card.tsx"],"sourcesContent":["\"use client\";\n\nimport { memo } from \"react\";\nimport { Card, CardFooter, Image } from \"@heroui/react\";\n\nimport { HighlightText } from \"@/components/textAnimations/highlight-text\";\nimport { SplittingText } from \"@/components/textAnimations/splitting-text\";\nimport { ProfileCardProps } from \"@/components/about/types\";\n\nexport const ProfileCard = memo(function ProfileCard({\n  image,\n  name,\n  title,\n  description,\n}: ProfileCardProps) {\n  return (\n    <Card className=\"w-full max-w-6xl mx-auto p-0 md:p-0 mb-12 rounded-2xl dark:shadow-neutral-700 shadow-md overflow-hidden bg-white/90 dark:bg-black/60\">\n      <div className=\"flex flex-col mdplus:flex-row items-center md:items-start gap-8\">\n        {/* Left image card */}\n        <div className=\"w-full md:w-[300px] relative h-[300px]\">\n          <Card isFooterBlurred className=\"w-full h-full\">\n            <Image\n              alt=\"Profile background\"\n              className=\"z-0 object-cover\"\n              src={image}\n            />\n            <CardFooter className=\"absolute bg-black/50 bottom-0 z-10 border-t border-white/20\">\n              <div className=\"flex flex-col text-white\">\n                <HighlightText className=\"text-lg font-semibold \" text={name} />\n                <p className=\"text-sm text-white/80\">{title}</p>\n              </div>\n            </CardFooter>\n          </Card>\n        </div>\n\n        {/* Right Description */}\n        <div className=\"text-muted-foreground text-sm leading-relaxed max-w-2xl px-6 py-4\">\n          {description.map((paragraph, index) => (\n            <p key={index} className=\"mb-4\">\n              <SplittingText\n                delay={index * 500}\n                inView={true}\n                inViewOnce={true}\n                motionVariants={{ stagger: 0.08 }}\n                text={paragraph}\n                type=\"words\"\n              />\n            </p>\n          ))}\n        </div>\n      </div>\n    </Card>\n  );\n});"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AANA;;;;;;AASO,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,OAAI,AAAD,EAAE,SAAS,YAAY,EACnD,KAAK,EACL,IAAI,EACJ,KAAK,EACL,WAAW,EACM;IACjB,qBACE,8OAAC,sMAAA,CAAA,OAAI;QAAC,WAAU;kBACd,cAAA,8OAAC;YAAI,WAAU;;8BAEb,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,sMAAA,CAAA,OAAI;wBAAC,eAAe;wBAAC,WAAU;;0CAC9B,8OAAC,yMAAA,CAAA,QAAK;gCACJ,KAAI;gCACJ,WAAU;gCACV,KAAK;;;;;;0CAEP,8OAAC,mNAAA,CAAA,aAAU;gCAAC,WAAU;0CACpB,cAAA,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,kJAAA,CAAA,gBAAa;4CAAC,WAAU;4CAAyB,MAAM;;;;;;sDACxD,8OAAC;4CAAE,WAAU;sDAAyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAO9C,8OAAC;oBAAI,WAAU;8BACZ,YAAY,GAAG,CAAC,CAAC,WAAW,sBAC3B,8OAAC;4BAAc,WAAU;sCACvB,cAAA,8OAAC,kJAAA,CAAA,gBAAa;gCACZ,OAAO,QAAQ;gCACf,QAAQ;gCACR,YAAY;gCACZ,gBAAgB;oCAAE,SAAS;gCAAK;gCAChC,MAAM;gCACN,MAAK;;;;;;2BAPD;;;;;;;;;;;;;;;;;;;;;AAepB","debugId":null}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":["file:///Users/rahat.ali/Documents/workplace/rahat/arbirali.github.io/components/about/section-header.tsx"],"sourcesContent":["\"use client\";\n\nimport { Icon } from \"@iconify/react\";\n\nimport { SectionHeaderProps } from \"@/components/about/types\";\n\nexport const SectionHeader = ({\n  icon,\n  title,\n  className = \"\",\n}: SectionHeaderProps) => (\n  <div className={`flex items-center gap-3 mb-6 ${className}`}>\n    <div className=\"bg-primary-100 text-primary-500 p-2 rounded-full\">\n      <Icon className=\"text-xl\" icon={icon} />\n    </div>\n    <h2 className=\"text-2xl font-bold text-primary-500\">{title}</h2>\n  </div>\n);"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAMO,MAAM,gBAAgB,CAAC,EAC5B,IAAI,EACJ,KAAK,EACL,YAAY,EAAE,EACK,iBACnB,8OAAC;QAAI,WAAW,CAAC,6BAA6B,EAAE,WAAW;;0BACzD,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,qJAAA,CAAA,OAAI;oBAAC,WAAU;oBAAU,MAAM;;;;;;;;;;;0BAElC,8OAAC;gBAAG,WAAU;0BAAuC","debugId":null}},
    {"offset": {"line": 368, "column": 0}, "map": {"version":3,"sources":["file:///Users/rahat.ali/Documents/workplace/rahat/arbirali.github.io/components/about/timelines/timeline-item.tsx"],"sourcesContent":["'use client';\nimport { motion } from \"framer-motion\";\n\nimport { SplittingText } from \"@/components/textAnimations/splitting-text\";\nimport { TimelineItemProps } from \"@/components/about/types\";\n\nexport const TimelineItem = ({\n  title,\n  date,\n  description,\n  variants,\n  delay = 0,\n}: TimelineItemProps) => {\n  return (\n    <motion.li className=\"mb-10 relative pl-6\" variants={variants}>\n      <span className=\"absolute left-0 top-1 bg-primary-500 rounded-full w-4 h-4 border-2 border-background z-10\" />\n      <h4 className=\"text-lg font-semibold\">{title}</h4>\n      <time className=\"block mb-1 text-sm text-primary-500\">{date}</time>\n      <SplittingText\n        className=\"text-sm text-muted-foreground\"\n        delay={delay}\n        inView={true}\n        inViewOnce={true}\n        text={description}\n        type=\"words\"\n      />\n    </motion.li>\n  );\n};\n"],"names":[],"mappings":";;;;AACA;AAEA;AAHA;;;;AAMO,MAAM,eAAe,CAAC,EAC3B,KAAK,EACL,IAAI,EACJ,WAAW,EACX,QAAQ,EACR,QAAQ,CAAC,EACS;IAClB,qBACE,8OAAC,0LAAA,CAAA,SAAM,CAAC,EAAE;QAAC,WAAU;QAAsB,UAAU;;0BACnD,8OAAC;gBAAK,WAAU;;;;;;0BAChB,8OAAC;gBAAG,WAAU;0BAAyB;;;;;;0BACvC,8OAAC;gBAAK,WAAU;0BAAuC;;;;;;0BACvD,8OAAC,kJAAA,CAAA,gBAAa;gBACZ,WAAU;gBACV,OAAO;gBACP,QAAQ;gBACR,YAAY;gBACZ,MAAM;gBACN,MAAK;;;;;;;;;;;;AAIb","debugId":null}},
    {"offset": {"line": 431, "column": 0}, "map": {"version":3,"sources":["file:///Users/rahat.ali/Documents/workplace/rahat/arbirali.github.io/components/about/variants.ts"],"sourcesContent":["export const containerVariants = {\n  hidden: {},\n  visible: {\n    transition: {\n      staggerChildren: 0.15,\n    },\n  },\n};\n\nexport const itemVariants = {\n  hidden: { opacity: 0, x: -30 },\n  visible: { opacity: 1, x: 0, transition: { duration: 0.5 } },\n};\n"],"names":[],"mappings":";;;;AAAO,MAAM,oBAAoB;IAC/B,QAAQ,CAAC;IACT,SAAS;QACP,YAAY;YACV,iBAAiB;QACnB;IACF;AACF;AAEO,MAAM,eAAe;IAC1B,QAAQ;QAAE,SAAS;QAAG,GAAG,CAAC;IAAG;IAC7B,SAAS;QAAE,SAAS;QAAG,GAAG;QAAG,YAAY;YAAE,UAAU;QAAI;IAAE;AAC7D","debugId":null}},
    {"offset": {"line": 462, "column": 0}, "map": {"version":3,"sources":["file:///Users/rahat.ali/Documents/workplace/rahat/arbirali.github.io/components/about/timelines/education-timeline.tsx"],"sourcesContent":["\"use client\";\n\nimport { motion } from \"framer-motion\";\n\nimport { SectionHeader } from \"@/components/about/section-header\";\nimport { TimelineItem } from \"@/components/about/timelines/timeline-item\";\nimport { containerVariants, itemVariants } from \"@/components/about/variants\";\nimport { EducationItems } from \"@/components/about/types\";\n\ninterface EducationTimelineProps {\n  education: EducationItems;\n}\n\nexport const EducationTimeline = ({ education }: EducationTimelineProps) => (\n  <div className=\"mb-20\">\n    <SectionHeader icon=\"mdi:school-outline\" title=\"Education\" />\n\n    <motion.ol\n      className=\"relative ml-6\"\n      initial=\"hidden\"\n      whileInView=\"visible\"\n      viewport={{ once: true, amount: 0.2 }}\n      variants={containerVariants}\n    >\n      <div className=\"absolute top-2 left-2 bottom-0 w-px bg-primary-500\" />\n      {education.map((item, idx) => (\n        <TimelineItem\n          key={idx}\n          title={item.title}\n          date={item.date}\n          description={item.description}\n          variants={itemVariants}\n          delay={idx * 300}\n        />\n      ))}\n    </motion.ol>\n  </div>\n);\n"],"names":[],"mappings":";;;;AAEA;AAEA;AACA;AACA;AANA;;;;;;AAaO,MAAM,oBAAoB,CAAC,EAAE,SAAS,EAA0B,iBACrE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,yIAAA,CAAA,gBAAa;gBAAC,MAAK;gBAAqB,OAAM;;;;;;0BAE/C,8OAAC,0LAAA,CAAA,SAAM,CAAC,EAAE;gBACR,WAAU;gBACV,SAAQ;gBACR,aAAY;gBACZ,UAAU;oBAAE,MAAM;oBAAM,QAAQ;gBAAI;gBACpC,UAAU,+HAAA,CAAA,oBAAiB;;kCAE3B,8OAAC;wBAAI,WAAU;;;;;;oBACd,UAAU,GAAG,CAAC,CAAC,MAAM,oBACpB,8OAAC,qJAAA,CAAA,eAAY;4BAEX,OAAO,KAAK,KAAK;4BACjB,MAAM,KAAK,IAAI;4BACf,aAAa,KAAK,WAAW;4BAC7B,UAAU,+HAAA,CAAA,eAAY;4BACtB,OAAO,MAAM;2BALR","debugId":null}},
    {"offset": {"line": 533, "column": 0}, "map": {"version":3,"sources":["file:///Users/rahat.ali/Documents/workplace/rahat/arbirali.github.io/components/about/timelines/experience-timeline.tsx"],"sourcesContent":["\"use client\";\nimport { motion } from \"framer-motion\";\n\nimport { SectionHeader } from \"@/components/about/section-header\";\nimport { TimelineItem } from \"@/components/about/timelines/timeline-item\";\nimport { containerVariants, itemVariants } from \"@/components/about/variants\";\nimport { ExperienceItems } from \"@/components/about/types\";\n\ninterface ExperienceTimelineProps {\n  experience: ExperienceItems;\n}\n\nexport const ExperienceTimeline = ({ experience }: ExperienceTimelineProps) => (\n  <div className=\"mb-24\">\n    <SectionHeader icon=\"mdi:briefcase-outline\" title=\"Experience\" />\n\n    <motion.ol\n      className=\"relative ml-6\"\n      initial=\"hidden\"\n      variants={containerVariants}\n      viewport={{ once: true, amount: 0.2 }}\n      whileInView=\"visible\"\n    >\n      <div className=\"absolute top-2 left-2 bottom-0 w-px bg-primary-500\" />\n      {experience.map((item, idx) => (\n        <TimelineItem\n          key={idx}\n          date={item.date}\n          delay={idx * 300}\n          description={item.description}\n          title={item.title}\n          variants={itemVariants}\n        />\n      ))}\n    </motion.ol>\n  </div>\n);"],"names":[],"mappings":";;;;AACA;AAEA;AACA;AACA;AALA;;;;;;AAYO,MAAM,qBAAqB,CAAC,EAAE,UAAU,EAA2B,iBACxE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,yIAAA,CAAA,gBAAa;gBAAC,MAAK;gBAAwB,OAAM;;;;;;0BAElD,8OAAC,0LAAA,CAAA,SAAM,CAAC,EAAE;gBACR,WAAU;gBACV,SAAQ;gBACR,UAAU,+HAAA,CAAA,oBAAiB;gBAC3B,UAAU;oBAAE,MAAM;oBAAM,QAAQ;gBAAI;gBACpC,aAAY;;kCAEZ,8OAAC;wBAAI,WAAU;;;;;;oBACd,WAAW,GAAG,CAAC,CAAC,MAAM,oBACrB,8OAAC,qJAAA,CAAA,eAAY;4BAEX,MAAM,KAAK,IAAI;4BACf,OAAO,MAAM;4BACb,aAAa,KAAK,WAAW;4BAC7B,OAAO,KAAK,KAAK;4BACjB,UAAU,+HAAA,CAAA,eAAY;2BALjB","debugId":null}},
    {"offset": {"line": 604, "column": 0}, "map": {"version":3,"sources":["file:///Users/rahat.ali/Documents/workplace/rahat/arbirali.github.io/components/orbiting-circles.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nexport interface OrbitingCirclesProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  className?: string;\n  children?: React.ReactNode;\n  reverse?: boolean;\n  duration?: number;\n  delay?: number;\n  radius?: number;\n  path?: boolean;\n  iconSize?: number;\n  speed?: number;\n}\n\nexport function OrbitingCircles({\n  className,\n  children,\n  reverse,\n  duration = 20,\n  radius = 160,\n  path = true,\n  iconSize = 30,\n  speed = 1,\n  ...props\n}: OrbitingCirclesProps) {\n  const calculatedDuration = duration / speed;\n\n  return (\n    <>\n      {path && (\n        <svg\n          className=\"pointer-events-none absolute inset-0 size-full\"\n          version=\"1.1\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <circle\n            className=\"stroke-black/10 stroke-1 dark:stroke-white/10\"\n            cx=\"50%\"\n            cy=\"50%\"\n            fill=\"none\"\n            r={radius}\n          />\n        </svg>\n      )}\n      {React.Children.map(children, (child, index) => {\n        const angle = (360 / React.Children.count(children)) * index;\n\n        return (\n          <div\n            className={cn(\n              `absolute flex size-[var(--icon-size)] transform-gpu animate-orbit items-center justify-center rounded-full`,\n              { \"[animation-direction:reverse]\": reverse },\n              className,\n            )}\n            style={\n              {\n                \"--duration\": calculatedDuration,\n                \"--radius\": radius,\n                \"--angle\": angle,\n                \"--icon-size\": `${iconSize}px`,\n              } as React.CSSProperties\n            }\n            {...props}\n          >\n            {child}\n          </div>\n        );\n      })}\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAeO,SAAS,gBAAgB,EAC9B,SAAS,EACT,QAAQ,EACR,OAAO,EACP,WAAW,EAAE,EACb,SAAS,GAAG,EACZ,OAAO,IAAI,EACX,WAAW,EAAE,EACb,QAAQ,CAAC,EACT,GAAG,OACkB;IACrB,MAAM,qBAAqB,WAAW;IAEtC,qBACE;;YACG,sBACC,8OAAC;gBACC,WAAU;gBACV,SAAQ;gBACR,OAAM;0BAEN,cAAA,8OAAC;oBACC,WAAU;oBACV,IAAG;oBACH,IAAG;oBACH,MAAK;oBACL,GAAG;;;;;;;;;;;YAIR,qMAAA,CAAA,UAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO;gBACpC,MAAM,QAAQ,AAAC,MAAM,qMAAA,CAAA,UAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAa;gBAEvD,qBACE,8OAAC;oBACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,CAAC,0GAA0G,CAAC,EAC5G;wBAAE,iCAAiC;oBAAQ,GAC3C;oBAEF,OACE;wBACE,cAAc;wBACd,YAAY;wBACZ,WAAW;wBACX,eAAe,GAAG,SAAS,EAAE,CAAC;oBAChC;oBAED,GAAG,KAAK;8BAER;;;;;;YAGP;;;AAGN","debugId":null}},
    {"offset": {"line": 666, "column": 0}, "map": {"version":3,"sources":["file:///Users/rahat.ali/Documents/workplace/rahat/arbirali.github.io/components/about/skills.tsx"],"sourcesContent":["\"use client\";\nimport { motion } from \"framer-motion\";\nimport { Icon } from \"@iconify/react\";\nimport { Accordion, AccordionItem } from \"@heroui/react\";\n\nimport { OrbitingCircles } from \"@/components/orbiting-circles\";\nimport { SectionHeader } from \"@/components/about/section-header\";\nimport { capitalize } from \"@/lib/utils\";\nimport { TechCategories } from \"@/components/about/types\";\n\ninterface SkillsProps {\n  tech: TechCategories;\n}\n\nexport const Skills = ({ tech }: SkillsProps) => (\n  <motion.div\n    initial={{ opacity: 0, y: 40 }}\n    transition={{ duration: 0.6 }}\n    viewport={{ once: true }}\n    whileInView={{ opacity: 1, y: 0 }}\n  >\n    <SectionHeader icon=\"mdi:tools\" title=\"Skills\" />\n\n    <Accordion selectionMode=\"multiple\" variant=\"bordered\">\n      {Object.entries(tech).map(([category, { description, tools }]) => (\n        <AccordionItem\n          key={category}\n          aria-label={category}\n          title={capitalize(category)}\n        >\n          <p className=\"mb-4 text-sm text-muted-foreground\">{description}</p>\n\n          <div className=\"relative h-[300px] w-full\">\n            <OrbitingCircles\n              className=\"h-full w-full [&>div]:hover:scale-110 [&>div]:hover:text-primary-500\"\n              duration={20}\n              radius={120}\n            >\n              {tools.map((tool) => (\n                <div key={tool.name}>\n                  <Icon\n                    className=\"transition-all duration-300\"\n                    height={24}\n                    icon={tool.icon}\n                    width={24}\n                  />\n                </div>\n              ))}\n            </OrbitingCircles>\n          </div>\n        </AccordionItem>\n      ))}\n    </Accordion>\n  </motion.div>\n);"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAPA;;;;;;;;AAcO,MAAM,SAAS,CAAC,EAAE,IAAI,EAAe,iBAC1C,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;QACT,SAAS;YAAE,SAAS;YAAG,GAAG;QAAG;QAC7B,YAAY;YAAE,UAAU;QAAI;QAC5B,UAAU;YAAE,MAAM;QAAK;QACvB,aAAa;YAAE,SAAS;YAAG,GAAG;QAAE;;0BAEhC,8OAAC,yIAAA,CAAA,gBAAa;gBAAC,MAAK;gBAAY,OAAM;;;;;;0BAEtC,8OAAC,qNAAA,CAAA,YAAS;gBAAC,eAAc;gBAAW,SAAQ;0BACzC,OAAO,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,UAAU,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,iBAC3D,8OAAC,mOAAA,CAAA,gBAAa;wBAEZ,cAAY;wBACZ,OAAO,CAAA,GAAA,4GAAA,CAAA,aAAU,AAAD,EAAE;;0CAElB,8OAAC;gCAAE,WAAU;0CAAsC;;;;;;0CAEnD,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC,kIAAA,CAAA,kBAAe;oCACd,WAAU;oCACV,UAAU;oCACV,QAAQ;8CAEP,MAAM,GAAG,CAAC,CAAC,qBACV,8OAAC;sDACC,cAAA,8OAAC,qJAAA,CAAA,OAAI;gDACH,WAAU;gDACV,QAAQ;gDACR,MAAM,KAAK,IAAI;gDACf,OAAO;;;;;;2CALD,KAAK,IAAI;;;;;;;;;;;;;;;;uBAbpB","debugId":null}},
    {"offset": {"line": 779, "column": 0}, "map": {"version":3,"sources":["file:///Users/rahat.ali/Documents/workplace/rahat/arbirali.github.io/components/textAnimations/morphing-text.tsx"],"sourcesContent":["\"use client\";\n\nimport { useCallback, useEffect, useRef } from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst morphTime = 1.5;\nconst cooldownTime = 0.5;\n\nconst useMorphingText = (texts: readonly string[]) => {\n  const textIndexRef = useRef(0);\n  const morphRef = useRef(0);\n  const cooldownRef = useRef(0);\n  const timeRef = useRef(new Date());\n\n  const text1Ref = useRef<HTMLSpanElement>(null);\n  const text2Ref = useRef<HTMLSpanElement>(null);\n\n  const setStyles = useCallback(\n    (fraction: number) => {\n      const [current1, current2] = [text1Ref.current, text2Ref.current];\n\n      if (!current1 || !current2) return;\n\n      current2.style.filter = `blur(${Math.min(8 / fraction - 8, 100)}px)`;\n      current2.style.opacity = `${Math.pow(fraction, 0.4) * 100}%`;\n\n      const invertedFraction = 1 - fraction;\n\n      current1.style.filter = `blur(${Math.min(8 / invertedFraction - 8, 100)}px)`;\n      current1.style.opacity = `${Math.pow(invertedFraction, 0.4) * 100}%`;\n\n      current1.textContent = texts[textIndexRef.current % texts.length];\n      current2.textContent = texts[(textIndexRef.current + 1) % texts.length];\n    },\n    [texts],\n  );\n\n  const doMorph = useCallback(() => {\n    morphRef.current -= cooldownRef.current;\n    cooldownRef.current = 0;\n\n    let fraction = morphRef.current / morphTime;\n\n    if (fraction > 1) {\n      cooldownRef.current = cooldownTime;\n      fraction = 1;\n    }\n\n    setStyles(fraction);\n\n    if (fraction === 1) {\n      textIndexRef.current++;\n    }\n  }, [setStyles]);\n\n  const doCooldown = useCallback(() => {\n    morphRef.current = 0;\n    const [current1, current2] = [text1Ref.current, text2Ref.current];\n\n    if (current1 && current2) {\n      current2.style.filter = \"none\";\n      current2.style.opacity = \"100%\";\n      current1.style.filter = \"none\";\n      current1.style.opacity = \"0%\";\n    }\n  }, []);\n\n  useEffect(() => {\n    let animationFrameId: number;\n\n    const animate = () => {\n      animationFrameId = requestAnimationFrame(animate);\n\n      const newTime = new Date();\n      const dt = (newTime.getTime() - timeRef.current.getTime()) / 1000;\n\n      timeRef.current = newTime;\n\n      cooldownRef.current -= dt;\n\n      if (cooldownRef.current <= 0) doMorph();\n      else doCooldown();\n    };\n\n    animate();\n\n    return () => {\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, [doMorph, doCooldown]);\n\n  return { text1Ref, text2Ref };\n};\n\ninterface MorphingTextProps {\n  className?: string;\n  texts: readonly string[];\n}\n\nconst Texts: React.FC<Pick<MorphingTextProps, \"texts\">> = ({ texts }) => {\n  const { text1Ref, text2Ref } = useMorphingText(texts);\n\n  return (\n    <>\n      <span\n        ref={text1Ref}\n        className=\"absolute inset-x-0 top-0 m-auto inline-block w-full\"\n      />\n      <span\n        ref={text2Ref}\n        className=\"absolute inset-x-0 top-0 m-auto inline-block w-full\"\n      />\n    </>\n  );\n};\n\nconst SvgFilters: React.FC = () => (\n  <svg className=\"hidden\" id=\"filters\" preserveAspectRatio=\"xMidYMid slice\">\n    <defs>\n      <filter id=\"threshold\">\n        <feColorMatrix\n          in=\"SourceGraphic\"\n          type=\"matrix\"\n          values=\"1 0 0 0 0\n                  0 1 0 0 0\n                  0 0 1 0 0\n                  0 0 0 255 -140\"\n        />\n      </filter>\n    </defs>\n  </svg>\n);\n\nexport const MorphingText: React.FC<MorphingTextProps> = ({\n  texts,\n  className,\n}) => (\n  <div\n    className={cn(\n      \"relative mx-auto h-16 w-full max-w-screen-md text-center font-sans text-[40pt] font-bold leading-none [filter:url(#threshold)_blur(0.6px)] md:h-24 lg:text-[6rem]\",\n      className,\n    )}\n  >\n    <Texts texts={texts} />\n    <SvgFilters />\n  </div>\n);\n"],"names":[],"mappings":"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","debugId":null}}]
}